syntax = "proto3";

package todos;
option go_package = "proto";

import "google/protobuf/empty.proto";

// Todos manages todos
service Todos {
  // Create creates a todo
  rpc Create(NewTodo) returns (Todo);
  // List lists all todos
  rpc List(google.protobuf.Empty) returns (TodoList);
  // Get gets one todo
  rpc Get(TodoID) returns (Todo);
  // Update updates one todo
  // Index can't be updated with the `Update` rpc, use the `Reorder` rpc
  rpc Update(Todo) returns (Todo);
  // Delete deletes one todo
  rpc Delete(TodoID) returns (Todo);
  // Reorder reorders a todo
  rpc Reorder(TodoReorder) returns (Todo);
  // SubscribeToChanges subscribes to all changes
  rpc SubscribeToChanges(google.protobuf.Empty) returns (stream TodoChange);
}

// NewTodo is a new todo
message NewTodo {
  string Title = 1;
  string Body = 2;
}

// Todo is a todo
message Todo {
  int64 ID = 1;
  string Title = 2;
  string Body = 3;
  int64 Index = 4;
}

// TodoList is a list of todos
message TodoList { repeated Todo Todos = 1; }

// TodoID is a todo's ID
message TodoID { int64 ID = 1; }

// TodoReorder is a request to reorder a todo
message TodoReorder {
  int64 ID = 1;
  int64 Offset = 2;
}

// TodoChangeType is a change type
enum TodoChangeType {
  CREATE = 0;
  UPDATE = 1;
  DELETE = 2;
}

// TodoChange is a change with the changed todo
message TodoChange {
  TodoChangeType type = 1;
  Todo todo = 2;
}